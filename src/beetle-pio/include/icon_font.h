/*******************************************************************************
 * Size: 18 px
 * Bpp: 2
 * Opts: 
 ******************************************************************************/

// generated via: https://lvgl.io/tools/fontconverter
// manual changes made to avoid conflicts with jelle.h, eg:
//
// `cmaps`        -> `icon_font_cmaps`
// `glyph_bitmap` -> `icon_font_glyph_bitmap`
//
// ..etc

#include "lvgl.h"

#ifndef ICON_FONT
#define ICON_FONT 1
#endif

#if ICON_FONT

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t icon_font_glyph_bitmap[] = {
    /* U+0041 "A" */
    0x0, 0x1, 0x40, 0x0, 0x0, 0x7, 0xd0, 0x0,
    0x0, 0x1f, 0xf4, 0x0, 0x0, 0x7f, 0xfd, 0x0,
    0x1, 0xff, 0xff, 0x40, 0x7, 0xff, 0xff, 0xd0,
    0x1f, 0xff, 0xff, 0xf4, 0x3f, 0xff, 0xff, 0xfc,
    0x7f, 0xef, 0xfb, 0xfd, 0x3f, 0x8f, 0xf2, 0xfc,
    0x5, 0xf, 0xf0, 0x50, 0x0, 0xf, 0xf0, 0x0,
    0x0, 0xf, 0xf0, 0x0, 0x0, 0xf, 0xf0, 0x0,
    0x0, 0xf, 0xf0, 0x0, 0x0, 0xf, 0xf0, 0x0,
    0x0, 0xf, 0xf0, 0x0, 0x0, 0x7, 0xd0, 0x0,

    /* U+0042 "B" */
    0x0, 0x0, 0x14, 0x0, 0x0, 0x0, 0xf, 0xe0,
    0x0, 0x0, 0x1, 0xff, 0x80, 0x0, 0x0, 0xf,
    0xfe, 0x0, 0x0, 0x0, 0x7f, 0xf8, 0x0, 0x0,
    0x2, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0x8f,
    0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff,
    0xd3, 0xff, 0xff, 0xff, 0xf4, 0x0, 0x0, 0x2f,
    0xfd, 0x0, 0x0, 0xb, 0xff, 0x40, 0x0, 0x1,
    0xff, 0xd0, 0x0, 0x0, 0x1f, 0xf4, 0x0, 0x0,
    0x0, 0xfe, 0x0, 0x0, 0x0, 0x1, 0x40, 0x0,

    /* U+0043 "C" */
    0x0, 0x7, 0xd0, 0x0, 0x0, 0xf, 0xf0, 0x0,
    0x0, 0xf, 0xf0, 0x0, 0x0, 0xf, 0xf0, 0x0,
    0x0, 0xf, 0xf0, 0x0, 0x0, 0xf, 0xf0, 0x0,
    0x0, 0xf, 0xf0, 0x0, 0x5, 0xf, 0xf0, 0x50,
    0x3f, 0x8f, 0xf2, 0xfc, 0x7f, 0xef, 0xfb, 0xfd,
    0x3f, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xf4,
    0x7, 0xff, 0xff, 0xd0, 0x1, 0xff, 0xff, 0x40,
    0x0, 0x7f, 0xfd, 0x0, 0x0, 0x1f, 0xf4, 0x0,
    0x0, 0x7, 0xd0, 0x0, 0x0, 0x1, 0x40, 0x0,

    /* U+0044 "D" */
    0x0, 0x1, 0x40, 0x0, 0x0, 0x0, 0x2f, 0xc0,
    0x0, 0x0, 0x2, 0xff, 0x40, 0x0, 0x0, 0x2f,
    0xfc, 0x0, 0x0, 0x2, 0xff, 0xd0, 0x0, 0x0,
    0x2f, 0xfe, 0x0, 0x0, 0x2, 0xff, 0xff, 0xff,
    0xfd, 0x2f, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff,
    0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0x0,
    0x7f, 0xf8, 0x0, 0x0, 0x0, 0x7f, 0xf8, 0x0,
    0x0, 0x0, 0x7f, 0xf4, 0x0, 0x0, 0x0, 0x7f,
    0xd0, 0x0, 0x0, 0x0, 0xbf, 0x0, 0x0, 0x0,
    0x0, 0x50, 0x0, 0x0,

    /* U+0045 "E" */
    0x1f, 0x80, 0x0, 0x3, 0xff, 0x0, 0x0, 0x7f,
    0xfc, 0x0, 0x3, 0xff, 0xf0, 0x0, 0x1f, 0xff,
    0xc0, 0x0, 0x7f, 0xff, 0x0, 0x1, 0xff, 0xfc,
    0x0, 0x7, 0xff, 0xf0, 0x0, 0x1f, 0xff, 0xc0,
    0x1, 0xff, 0xfc, 0x0, 0x7f, 0xff, 0x0, 0x1f,
    0xff, 0xc0, 0x7, 0xff, 0xf0, 0x1, 0xff, 0xfc,
    0x0, 0x3f, 0xff, 0x0, 0x7, 0xff, 0xc0, 0x0,
    0x3f, 0xf0, 0x0, 0x1, 0xf8, 0x0, 0x0,

    /* U+0046 "F" */
    0x0, 0x2f, 0x40, 0xf, 0xfc, 0x0, 0xff, 0xd0,
    0xf, 0xfd, 0x0, 0x7f, 0xc0, 0x0, 0x50, 0x0,
    0x0, 0x1, 0xbf, 0x40, 0x7f, 0xfd, 0x0, 0x3f,
    0xe0, 0x3, 0xfe, 0x0, 0xbf, 0xd0, 0xf, 0xfc,
    0x2, 0xff, 0x80, 0x3f, 0xf0, 0x3, 0xff, 0x0,
    0x1f, 0xff, 0x0, 0x7f, 0x80,

    /* U+0047 "G" */
    0x0, 0x2, 0xf8, 0x0, 0x0, 0x0, 0x2f, 0xfc,
    0x0, 0x0, 0x1, 0xf0, 0xf4, 0x0, 0x0, 0xf,
    0x0, 0xf0, 0x0, 0x0, 0xb8, 0x2, 0xe0, 0x0,
    0x3, 0xc3, 0xc3, 0xc0, 0x0, 0x2d, 0xf, 0x7,
    0xc0, 0x1, 0xf0, 0x0, 0xb, 0x40, 0xf, 0x1,
    0xd0, 0xf, 0x0, 0xb8, 0x3, 0x80, 0x2e, 0x3,
    0xc0, 0x1d, 0x0, 0x3c, 0x2d, 0x0, 0x70, 0x0,
    0x78, 0xf0, 0x0, 0x90, 0x0, 0xf3, 0xc0, 0x0,
    0x0, 0x3, 0xc7, 0xff, 0xff, 0xff, 0xfe, 0x7,
    0xff, 0xff, 0xff, 0xd0,

    /* U+0048 "H" */
    0x0, 0x0, 0x1, 0xd0, 0x0, 0x0, 0x0, 0x3f,
    0x40, 0x0, 0x0, 0xb, 0xfd, 0x0, 0x0, 0x2,
    0xff, 0xf4, 0x0, 0x1, 0xff, 0xff, 0xd0, 0x56,
    0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xe2,
    0xff, 0xff, 0xff, 0xf0, 0xb, 0xff, 0xff, 0xf8,
    0x0, 0x2f, 0xff, 0xff, 0x0, 0x0, 0xbf, 0xff,
    0xd0, 0x0, 0x3, 0xff, 0xfc, 0x0, 0x0, 0xff,
    0xff, 0x80, 0x0, 0x2f, 0x6f, 0xf8, 0x0, 0x7,
    0x80, 0xbf, 0x40, 0x0, 0xd0, 0x2, 0xf4, 0x0,
    0x24, 0x0, 0xb, 0x0, 0x4, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0,

    /* U+0049 "I" */
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x7e, 0x0, 0x0, 0x0, 0x3, 0xfe, 0x0, 0x0,
    0x0, 0x3f, 0xfc, 0x0, 0x0, 0x1, 0xff, 0xf0,
    0x0, 0x0, 0xf, 0xff, 0x40, 0x0, 0x0, 0x7f,
    0xfc, 0x0, 0x0, 0x3, 0xff, 0xd0, 0x2f, 0x40,
    0x2f, 0xff, 0x2, 0xff, 0x40, 0xff, 0xf0, 0xf,
    0xff, 0x4b, 0xff, 0x80, 0x3f, 0xff, 0xbf, 0xfc,
    0x0, 0x7f, 0xff, 0xff, 0xe0, 0x0, 0x7f, 0xff,
    0xff, 0x0, 0x0, 0x7f, 0xff, 0xf4, 0x0, 0x0,
    0x7f, 0xff, 0xc0, 0x0, 0x0, 0x7f, 0xfd, 0x0,
    0x0, 0x0, 0x7f, 0xf0, 0x0, 0x0, 0x0, 0x7e,
    0x0, 0x0, 0x0,

    /* U+004A "J" */
    0x0, 0x1, 0x54, 0x0, 0x0, 0x2, 0xff, 0xff,
    0x80, 0x0, 0xbf, 0xff, 0xff, 0xe0, 0xb, 0xff,
    0xff, 0xff, 0xf0, 0xff, 0xe4, 0x1, 0xbf, 0xf3,
    0xfd, 0x1, 0x40, 0x3f, 0xc7, 0x81, 0xff, 0xf4,
    0x2d, 0x0, 0x2f, 0xff, 0xf8, 0x0, 0x1, 0xff,
    0xff, 0xf4, 0x0, 0x3, 0xf4, 0x1f, 0xc0, 0x0,
    0x1, 0x0, 0x4, 0x0, 0x0, 0x0, 0x7d, 0x0,
    0x0, 0x0, 0x2, 0xf8, 0x0, 0x0, 0x0, 0x3,
    0xc0, 0x0, 0x0,

    /* U+004B "K" */
    0x0, 0x7f, 0xd0, 0x0, 0x2f, 0xff, 0x80, 0x7,
    0xff, 0xfd, 0x0, 0xff, 0xff, 0xf0, 0xf, 0xff,
    0xff, 0x0, 0xff, 0xff, 0xf4, 0xf, 0xff, 0xff,
    0x0, 0xff, 0xff, 0xf0, 0x3, 0xff, 0xfc, 0x0,
    0x1f, 0xff, 0x40, 0x0, 0x1a, 0x40, 0x0, 0x0,
    0x50, 0x0, 0x2, 0xff, 0xf8, 0x1, 0xff, 0xff,
    0xf4, 0x3f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xfd,
    0x3f, 0xff, 0xff, 0xc0, 0x6f, 0xff, 0x90,

    /* U+004C "L" */
    0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x3, 0xc0,
    0x0, 0x0, 0x0, 0x1f, 0x80, 0x0, 0x0, 0x0,
    0xff, 0x0, 0x0, 0x0, 0x7, 0xfd, 0x0, 0x0,
    0x1, 0x7f, 0xfd, 0x40, 0xb, 0xff, 0xff, 0xff,
    0xff, 0x1f, 0xff, 0xff, 0xff, 0xf4, 0xf, 0xff,
    0xff, 0xff, 0x40, 0xf, 0xff, 0xff, 0xf4, 0x0,
    0xf, 0xff, 0xff, 0x0, 0x0, 0x2f, 0xff, 0xfc,
    0x0, 0x0, 0xff, 0xff, 0xf0, 0x0, 0x3, 0xff,
    0xff, 0xc0, 0x0, 0x1f, 0xf9, 0xff, 0x40, 0x0,
    0x7e, 0x0, 0xbe, 0x0, 0x2, 0xd0, 0x0, 0x3c,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0,

    /* U+004D "M" */
    0x0, 0x1b, 0xfe, 0x40, 0x0, 0xf, 0xff, 0xff,
    0x0, 0x7, 0xf9, 0x56, 0xfd, 0x0, 0xfc, 0x0,
    0x3, 0xf0, 0x3f, 0x0, 0x0, 0xf, 0xc7, 0xc0,
    0x2f, 0xac, 0x7d, 0xbc, 0xf, 0xff, 0xd3, 0xef,
    0x42, 0xf5, 0xfd, 0x1f, 0xf4, 0x3d, 0x7, 0xd1,
    0xff, 0x43, 0xd0, 0x7e, 0x1f, 0xf4, 0x2f, 0x5f,
    0xf6, 0xfb, 0x80, 0xff, 0xff, 0xfd, 0x7c, 0x2,
    0xf8, 0x3f, 0x43, 0xf0, 0x0, 0x0, 0x0, 0xf,
    0xc0, 0x0, 0x20, 0x0, 0x7f, 0x95, 0x6f, 0x40,
    0x0, 0xff, 0xff, 0xf0, 0x0, 0x1, 0xbf, 0xe4,
    0x0,

    /* U+004E "N" */
    0x2f, 0xff, 0xff, 0xff, 0x82, 0xff, 0xff, 0xff,
    0xff, 0x8f, 0x0, 0x0, 0x0, 0xf, 0x3c, 0x0,
    0x0, 0x0, 0x3c, 0xf0, 0x0, 0x0, 0x0, 0xf3,
    0xc0, 0x0, 0x0, 0x3, 0xcf, 0x0, 0x0, 0x0,
    0xf, 0x3c, 0x0, 0x0, 0x0, 0x3c, 0xf0, 0x0,
    0x0, 0x0, 0xf3, 0xc0, 0x0, 0x0, 0x3, 0xcf,
    0x0, 0x0, 0x0, 0xf, 0x2f, 0xff, 0xff, 0xff,
    0xf8, 0x2f, 0xff, 0xff, 0xff, 0x80, 0x3, 0xe0,
    0x0, 0x0, 0x0, 0xe, 0x0, 0x0, 0x0, 0x0,
    0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0,

    /* U+004F "O" */
    0x0, 0x3, 0xc0, 0x0, 0x0, 0x7, 0xd0, 0x0,
    0x0, 0x7, 0xd0, 0x0, 0x0, 0x7, 0xd0, 0x0,
    0x0, 0x7, 0xd0, 0x0, 0x0, 0x7, 0xd0, 0x0,
    0x0, 0x7, 0xd0, 0x0, 0x0, 0xf, 0xf0, 0x0,
    0x0, 0xbf, 0xfe, 0x0, 0xb, 0xff, 0xff, 0xe0,
    0x3f, 0xff, 0xff, 0xfc, 0xbe, 0x47, 0xd1, 0xbe,
    0x0, 0x7, 0xd0, 0x0, 0x0, 0x7, 0xd0, 0x0,
    0x0, 0x7, 0xd0, 0x0, 0x0, 0xf, 0xf0, 0x0,
    0x0, 0x3f, 0xfc, 0x0, 0x0, 0x39, 0x6c, 0x0,
    0x0, 0x0, 0x0, 0x0,

    /* U+0050 "P" */
    0x2, 0xf8, 0x2, 0xf8, 0x0, 0x2f, 0xf8, 0x2f,
    0xf8, 0x0, 0xf0, 0xf0, 0xf4, 0xf0, 0xb, 0xc3,
    0xff, 0xc3, 0xe0, 0xbf, 0xf, 0xff, 0xf, 0xe3,
    0xfd, 0x3f, 0xfd, 0x3f, 0xcf, 0xff, 0xff, 0xff,
    0xff, 0x3f, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff,
    0xff, 0xff, 0xf3, 0xc0, 0x0, 0x0, 0x3, 0xcf,
    0x0, 0x0, 0x0, 0xf, 0x3c, 0x0, 0x0, 0x0,
    0x3c, 0xf0, 0x0, 0x0, 0x0, 0xf3, 0xc0, 0x0,
    0x0, 0x3, 0xcf, 0x0, 0x0, 0x0, 0xf, 0x3c,
    0x0, 0x0, 0x0, 0x3c, 0xbf, 0xff, 0xff, 0xff,
    0xe0, 0xbf, 0xff, 0xff, 0xfe, 0x0
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t icon_font_glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 288, .box_w = 16, .box_h = 18, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 72, .adv_w = 288, .box_w = 18, .box_h = 16, .ofs_x = 0, .ofs_y = 1},
    {.bitmap_index = 144, .adv_w = 288, .box_w = 16, .box_h = 18, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 216, .adv_w = 288, .box_w = 19, .box_h = 16, .ofs_x = 0, .ofs_y = 1},
    {.bitmap_index = 292, .adv_w = 288, .box_w = 14, .box_h = 18, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 355, .adv_w = 288, .box_w = 10, .box_h = 18, .ofs_x = 4, .ofs_y = 0},
    {.bitmap_index = 400, .adv_w = 288, .box_w = 19, .box_h = 16, .ofs_x = 0, .ofs_y = 1},
    {.bitmap_index = 476, .adv_w = 288, .box_w = 18, .box_h = 19, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 562, .adv_w = 288, .box_w = 19, .box_h = 19, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 653, .adv_w = 288, .box_w = 19, .box_h = 14, .ofs_x = 0, .ofs_y = 2},
    {.bitmap_index = 720, .adv_w = 288, .box_w = 14, .box_h = 18, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 783, .adv_w = 288, .box_w = 19, .box_h = 18, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 869, .adv_w = 288, .box_w = 18, .box_h = 18, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 950, .adv_w = 288, .box_w = 19, .box_h = 17, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1031, .adv_w = 288, .box_w = 16, .box_h = 19, .ofs_x = 1, .ofs_y = -1},
    {.bitmap_index = 1107, .adv_w = 288, .box_w = 19, .box_h = 18, .ofs_x = 0, .ofs_y = 0}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/



/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t icon_font_cmaps[] =
{
    {
        .range_start = 65, .range_length = 16, .glyph_id_start = 1,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

#if LV_VERSION_CHECK(8, 0, 0)
/*Store all the custom data of the font*/
static  lv_font_fmt_txt_glyph_cache_t icon_font_cache;
static const lv_font_fmt_txt_dsc_t icon_font_font_dsc = {
#else
static lv_font_fmt_txt_dsc_t icon_font_font_dsc = {
#endif
    .glyph_bitmap = icon_font_glyph_bitmap,
    .glyph_dsc = icon_font_glyph_dsc,
    .cmaps = icon_font_cmaps,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 1,
    .bpp = 2,
    .kern_classes = 0,
    .bitmap_format = 0,
#if LV_VERSION_CHECK(8, 0, 0)
    .cache = &icon_font_cache
#endif
};


/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
#if LV_VERSION_CHECK(8, 0, 0)
const lv_font_t icon_font = {
#else
lv_font_t icon_font = {
#endif
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 20,          /*The maximum line height required by the font*/
    .base_line = 1,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_NONE,
#endif
#if LV_VERSION_CHECK(7, 4, 0) || LVGL_VERSION_MAJOR >= 8
    .underline_position = 0,
    .underline_thickness = 0,
#endif
    .dsc = &icon_font_font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
};



#endif /*#if ICON_FONT*/

